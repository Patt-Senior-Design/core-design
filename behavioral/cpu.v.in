`include "buscmd.vh"

module cpu(
  input clk,
  input rst);

  /*AUTOWIRE*/

  wire        l2_l2fifo_ready;

  wire        bfs_bus_req;
  wire [2:0]  bfs_bus_cmd;
  wire [4:0]  bfs_bus_tag;
  wire [31:6] bfs_bus_addr;
  wire [63:0] bfs_bus_data;
  wire        bfs_bus_hit;
  wire        bfs_bus_nack;

  wire        dc_valid;
  wire [1:0]  dc_op;
  wire [31:6] dc_addr;
  wire [63:0] dc_rdata;

  wire        dc_ready;
  wire        dc_rbuf_empty;

  brpred brpred(
    /*AUTOINST*/);

  csr csr(
    /*AUTOINST*/);

  dcache dcache(
    /*AUTOINST*/);

  decode decode(
    /*AUTOINST*/);

  exers exers(
    /*AUTOINST*/);

  fetch fetch(
    /*AUTOINST*/);

  icache icache(
    /*AUTOINST*/);

  lsq lsq(
    /*AUTOINST*/);

  /*
   mcalu AUTO_TEMPLATE(
   .exers_mcalu_issue(exers_mcalu@_issue),
   .mcalu_stall(mcalu@_stall),
   .mcalu_valid(mcalu@_valid),
   .mcalu_error(mcalu@_error),
   .mcalu_ecause(mcalu@_ecause[]),
   .mcalu_robid(mcalu@_robid[]),
   .mcalu_rd(mcalu@_rd[]),
   .mcalu_result(mcalu@_result[]),
   .wb_mcalu_stall(wb_mcalu@_stall));
   */

  mcalu mcalu0(
    /*AUTOINST*/);

  mcalu mcalu1(
    /*AUTOINST*/);

  rat rat(
    /*AUTOINST*/);

  rename rename(
    /*AUTOINST*/);

  rob rob(
    /*AUTOINST*/);

  /*
   scalu AUTO_TEMPLATE(
   .exers_scalu_issue(exers_scalu@_issue),
   .scalu_stall(scalu@_stall),
   .scalu_valid(scalu@_valid),
   .scalu_error(scalu@_error),
   .scalu_ecause(scalu@_ecause[]),
   .scalu_robid(scalu@_robid[]),
   .scalu_rd(scalu@_rd[]),
   .scalu_result(scalu@_result[]),
   .wb_scalu_stall(wb_scalu@_stall));
   */

  scalu scalu0(
    /*AUTOINST*/);

  scalu scalu1(
    /*AUTOINST*/);

  wb wb(
    /*AUTOINST*/);

  bus bus(
    /*AUTOINST*/);

  l2fifo l2fifo(
    /*AUTOINST*/);

  l2 #(`BUSID_L2) l2(
    .req_valid(l2fifo_l2_req),
    .req_op(l2fifo_l2_wen ? `OP_WR4 : `OP_RD),
    .req_addr(l2fifo_l2_addr),
    .req_wmask(l2fifo_l2_addr[2] ? {l2fifo_l2_wmask,4'b0} : {4'b0,l2fifo_l2_wmask}),
    .req_wdata({2{l2fifo_l2_wdata}}),
    .l2_req_ready(l2_l2fifo_ready),
    .l2_resp_op(),
    .l2_resp_addr(),
    /*AUTOINST*/);

  bfs_core bfs(
    /*AUTOINST*/);

  l2 #(`BUSID_BFS) bfsl2(
    .req_valid(bfs_dc_req),
    .req_op(bfs_dc_op),
    .req_addr({bfs_dc_addr[31:6],4'd0}),
    .req_wmask(bfs_dc_op[1] ? 8'b10000000 : 8'b11111111),
    .req_wdata(bfs_dc_op[0] ? 64'h01000000_00000000 : bfs_dc_wdata),
    .l2_req_ready(dc_ready),
    .l2_resp_valid(dc_valid),
    .l2_resp_error(),
    .l2_resp_op(dc_op),
    .l2_resp_addr(dc_addr),
    .l2_resp_rdata(dc_rdata),
    .resp_ready(1'b1),
    .l2_inv_valid(),
    .l2_inv_addr(),
    .inv_ready(1'b1),
    .l2_idle(dc_rbuf_empty),
    .l2_bus_req(bfs_bus_req),
    .l2_bus_cmd(bfs_bus_cmd),
    .l2_bus_tag(bfs_bus_tag),
    .l2_bus_addr(bfs_bus_addr),
    .l2_bus_data(bfs_bus_data),
    .l2_bus_hit(bfs_bus_hit),
    .l2_bus_nack(bfs_bus_nack),
    .bus_l2_grant(bus_bfs_grant),
    /*AUTOINST*/);

  dramctl dramctl(
    /*AUTOINST*/);

  rom rom(
    /*AUTOINST*/);

endmodule
